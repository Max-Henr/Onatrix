@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.PublishedCache
@using Umbraco.Cms.Core.Routing
@using Umbraco.Cms.Core.Services.Navigation
@using Umbraco.Cms.Web.Common.PublishedModels

@inject IVariationContextAccessor VariationContextAccessor
@inject IPublishedContentCache PublishedContentCache
@inject IDocumentNavigationQueryService DocumentNavigationQueryService
@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider


@{
    var selection = Model.Root().Children().Where(x => x.IsVisible(PublishedValueFallback)).ToArray();
    var rootContent = Umbraco.ContentAtRoot();
    var siteSettings = rootContent.OfType<SiteSettings>().FirstOrDefault();

    var siteName = siteSettings.SiteName ?? "Onatrix";
    var siteLogo = siteSettings.SiteLogo;
}

<div class="container">
    <div class="header-flex">
        <a href="/" class="logo">
            <img src="@siteLogo.Url()" alt="@siteName" />
        </a>
        <nav class="navbar">
            @if (selection?.Length > 0)
            {
                <ul class="nav-links">
                    @foreach (var item in selection)
                    {
                        <li class="@(item.IsAncestorOrSelf(Model) ? "current" : null)">
                            <a href="@item.Url(PublishedUrlProvider)">@item.Name</a>
                        </li>
                    }
                </ul>
            }
        </nav>
        <button class="search"><i class="fas fa-search"></i></button>
    </div>
</div>

